
class Solution {    // 动态规划
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        int max_num=nums[0];
        vector<int> dp(nums.size());
        dp[0]=nums[0];
        for(int i=1;i<nums.size();++i)
        {
            dp[i]=max(nums[i],dp[i-1]+nums[i]);
            max_num=max(dp[i],max_num);
        }
        return max_num;
    }
};


class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int max=nums[0];
        int add=0;
        for(int i=0;i<nums.size();++i)
        {
            add+=nums[i];
            if(add<nums[i]) 
                add=nums[i];
            if(max<add)
                max=add;
            
        }
        return max;
    }
};

