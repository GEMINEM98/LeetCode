
/*
思路：
双指针和定位指针：
p1指针指向nums1的末尾元素，p2指针指向nums2的末尾元素，cur指针指向nums1中从右向左固定元素的位置。
比较p1和p2的元素，将大的放入cur位置，同时需要更新某些指针的位置。
*/

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) 
    {
        int p1=m-1;
        int p2=n-1;
        int cur=m+n-1;
        while(p1>=0&&p2>=0)
            nums1[cur--]=(nums1[p1]>nums2[p2]?nums1[p1--]:nums2[p2--]);

                     // 如果p1没有完，p2完了，此时nums1的元素已经可以返回了；
        while(p2>=0) // 如果p2没有完，p1完了，此时需要将p2的元素逐次放进p1中。
            nums1[cur--]=nums2[p2--];
    }
};
