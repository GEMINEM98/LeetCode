
/*

数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。

 

示例：

输入：n = 3
输出：[
       "((()))",
       "(()())",
       "(())()",
       "()(())",
       "()()()"
     ]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/generate-parentheses
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


class Solution {
public:

    void _generateParenthesis(vector<string> v,int n,string s,int ln,int rn)
    {
        if(ln>n||rn>ln)
            return;
        if(ln==rn&&ln==n)
        {
            v.push_back(s);
            return;
        }
        _generateParenthesis(v,n,s+'(',ln,rn);
        _generateParenthesis(v,n,s+')',ln,rn);
    }

    vector<string> generateParenthesis(int n) {
        vector<string> v;
        string s="";
        int ln=0;
        int rn=0;
        _generateParenthesis(v,n,s,ln,rn);
        return v;
    }
};

