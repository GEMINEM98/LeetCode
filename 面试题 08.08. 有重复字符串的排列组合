
/*

有重复字符串的排列组合。编写一种方法，计算某字符串的所有排列组合。

示例1:

 输入：S = "qqe"
 输出：["eqq","qeq","qqe"]

示例2:

 输入：S = "ab"
 输出：["ab", "ba"]

提示:

    字符都是英文字母。
    字符串长度在[1, 9]之间。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/permutation-ii-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

class Solution {
public:
    vector<string> permutation(string S) {
        vector<string> v;
        sort(S.begin(),S.end());
        v.push_back(S);
        while(next_permutation(S.begin(),S.end()))
        {
            v.push_back(S);
        }
        return v;
    }
};

/*
class Solution {
public:

    //固定一个数的位置(index)，然后从下一位数再开始全排列(递归过程)...直到最后一位数
    //因为结果不重复，所以先sort，再if(i!=index&&nums[i]==nums[index])去掉重复的index

    void _permutation(vector<string>& v,string S,int index)
    {
        if(index==S.length())
        {
            v.push_back(S);
            return;
        }
        for(int i=index;i<S.length();++i)
        {
            if(i!=index&&S[i]==S[index])
                continue;
            swap(S[i],S[index]);
            _permutation(v,S,index+1);
        }
    }
    vector<string> permutation(string S) {
        vector<string> v;
        sort(S.begin(),S.end());
        _permutation(v,S,0);
        return v;
    }
};
*/