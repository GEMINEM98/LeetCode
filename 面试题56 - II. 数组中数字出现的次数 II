
/*
思路：
将原数组中所有整数的32位上的1进行计数管理，存入flag数组中；
flag数组中每个元素对应的是：这些整数在这个位上出现了多少次1；
遍历这个flag数组，用一个ret=0的整数接收结果，
当flag[i]%3==1，那么说明，仅出现1次的整数在该位上是1，
根据左移右移1，最终将ret的32个位对应上仅出现一次的整数的32个位。
*/
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        vector<int> flag(32,0); // 存的是各个32位上1出现的次数。
        int ret=0;
        for(int i=0;i<nums.size();++i)
        {
            for(int j=0;j<32;++j)
            {
                flag[j]+=((nums[i]>>j)&1);
            }
        }
        for(int i=0;i<flag.size();++i)
        {
            if(flag[i]%3==1)
            {
                ret=((1<<i)|ret);
            }
        }
        return ret;
    }
};
