

/*
思路：
先把两个string的长度补齐
从后向前循环遍历相对应的每个元素，利用下标直接进位
中间元素和首元素的进位需要分开考虑
*/


class Solution {
public:
    string addBinary(string a, string b) 
    {
        int length_a=a.size();  //先找出短的string
        int length_b=b.size();

                                //给短的string前面补上0，因为防止后面遍历的时候 出现下标越界的情况
        while(length_a<length_b)
        {
            a='0'+a;           
            ++length_a;
        }
        while(length_a>length_b)
        {
            b='0'+b;
            ++length_b;
        }
        
        for(int i=length_a-1;i>=0;--i)  //直接在a上面改动
        {
            a[i]=a[i]-'0'+b[i];  // 先算出i位上的和
            if(a[i]>='2')        // 需要进位
            {
                a[i]=(a[i]-'0')%2+'0';   // 直接将i上的元素 改为 进位后的元素

                if(i==0)         // 这个是第一个元素的进位 ，需要单独考虑   
                    a='1'+a;
                else 
                    a[i-1]++;    // 这个是中间元素的进位，直接给i-1元素加1即可，在下次循环继续向前判断
            }
        }
        return a;
    }
};

