

/*
思路：
题目要求将升序数组转换成高度平衡二叉树，
所以，根据升序的数组，用中序遍历递归构建二叉树；
为了保证高度平衡，每次new新结点都是取中间的数；
确定根结点，再分别构建左右子树。
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* _sortedArrayToBST(vector<int>& nums,int l,int r)
    {
        if(r<l)
            return nullptr;
        int m=l+((r-l)>>1);  // 注意>>运算符的优先级，最好加上括号。
        TreeNode* root=new TreeNode(nums[m]);
        root->left=_sortedArrayToBST(nums,l,m-1);
        root->right=_sortedArrayToBST(nums,m+1,r);
        return root;
    }

    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        int l=0;
        int r=nums.size()-1;
        return _sortedArrayToBST(nums,l,r);        
    }
};
