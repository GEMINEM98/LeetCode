

/*
思路：
遍历数组，取相邻字符个数之间的最小值，相加；
返回相加之后的值。
*/
/*
class Solution {
public:
    int countBinarySubstrings(string s) 
    {
        int p=0; // 记录上一次字符的个数 
        int q=1; // 记录当前字符的个数
        int res=0; // 记录结果

        for(int i=1;i<s.size();++i)
        {
            if(s[i]==s[i-1])
                ++q;
            else 
            {
                res+=min(p,q);
                p=q;
                q=1;
            }
        }
        return res+min(p,q);
    }
};
*/


/*
思路：
遍历字符串，分别记录相邻两个字符的个数；
如果后面的字符个数<=前面的字符个数，那么res++;
返回res。
*/

class Solution {
public:
    int countBinarySubstrings(string s) 
    {
        int p=0; // 记录上一次字符的个数 
        int q=1; // 记录当前字符的个数
        int res=0; // 记录结果

        for(int i=1;i<s.size();++i)
        {
            if(s[i]==s[i-1])
                ++q;
            else
            {
                p=q;
                q=1;
            }
            if(p>=q)
                ++res;
        }
        return res;
    }
};
