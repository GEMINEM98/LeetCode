/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

// 用容器存放前半部分的数据，逆序与后半部分进行比较

class Solution {
public:
    bool isPalindrome(ListNode* head) 
    {
        if(head==NULL || head->next==NULL)
            return true;
        
        ListNode* cur=head;
        ListNode* tmp=head;
        vector<ListNode> v; // 用容器存放链表的前半部分，用来和后半部分进行比较
        int count=0;
        
        while(cur!=NULL)
        {
            ++count;        // 求出链表长度
            cur=cur->next;
        }

        for(int i=0;i<count/2;++i)
        {                   // 将链表的前半部分放入容器
            v.push_back(*tmp); 
            tmp=tmp->next;
        }
        
        if(count%2==1)      // 调整好要与容器进行数据比较的指针的位置
            tmp=tmp->next;
        
        for(int j=count/2-1;j>=0;--j)
        {
            if((v[j].val)!=(tmp->val)) // 容器逆序，进行比较
            {
                return false;
            }
            tmp=tmp->next;
        }
        return true;
    }
};
