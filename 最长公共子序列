
/*

链接：https://www.nowcoder.com/questionTerminal/4727c06b9ee9446cab2e859b4bb86bb8
来源：牛客网

给定两个字符串str1和str2，输出连个字符串的最长公共子序列。如过最长公共子序列为空，则输出-1。

输入描述:

输出包括两行，第一行代表字符串str1，第二行代表str2。(1≤length(str1),length(str2)≤5000)\left( 1\leq length(str1),length(str2) \leq 5000\right)(1≤length(str1),length(str2)≤5000)



输出描述:

输出一行，代表他们最长公共子序列。如果公共子序列的长度为空，则输出-1。

示例1
输入

1A2C3D4B56
B1D23CA45B6A

输出

123456

说明

"123456"和“12C4B6”都是最长公共子序列，任意输出一个。

*/


/* 二维矩阵解法：
#include<iostream>
#include<vector>
using namespace std;
int func(string s1,string s2)
{
    int l1=s1.length();
    int l2=s2.length();
    vector<vector<int>> vv(l1,vector<int>(l2,0));
    
    for(int i=0;i<l2;++i)
    {
        if(s1[0]==s2[i])
            vv[0][i]=1;
    }
    for(int i=0;i<l1;++i)
    {
        if(s1[i]==s2[0])
            vv[i][0]=1;
    }
    for(int i=1;i<l1;++i)
    {
        for(int j=1;j<l2;++j)
        {
            if(s1[i]==s2[j])
            {
                vv[i][j]=vv[i-1][j-1]+1;
            }
        }
    }
    
    int res=0;
    for(int i=0;i<l1;++i)
    {
        for(int j=0;j<l2;++j)
        {
            res=max(res,vv[i][j]);
        }
    }
    return res;
}
int main()
{
    string s1="";
    string s2="";
    cin >> s1 >> s2;
    
    cout << func(s1,s2) << endl;
    
    return 0;
}
*/

/*一维矩阵解法：*/
#include<iostream>
#include<vector>
using namespace std;
int func(string s1,string s2)
{
    int l1=s1.length();
    int l2=s2.length();
    vector<int> v(l2,0);
    int res=0;
    for(int i=0;i<l2;++i)
    {
        if(s1[i]==s2[0])
            v[i]=1;
        else
            v[i]=0;
        
        for(int j=1;j<l2;++j)
        {
            if(s1[i]==s2[j])
            {
                v[j]=v[j-1]+1;
                res=max(res,v[j]);
            }
            else
                v[j]=0;
        }
    }
    return res;
}
int main()
{
    string s1="";
    string s2="";
    cin >> s1 >> s2;
    
    cout << func(s1,s2) << endl;
    
    return 0;
}
