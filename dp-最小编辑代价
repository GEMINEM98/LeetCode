
/*

链接：https://www.nowcoder.com/questionTerminal/04f1731f32e246b4a19688972d5e2600
来源：牛客网

对于两个字符串A和B，我们需要进行插入、删除和修改操作将A串变为B串，定义c0，c1，c2分别为三种操作的代价，请设计一个高效算法，求出将A串变为B串所需要的最少代价。

给定两个字符串A和B，及它们的长度和三种操作代价，请返回将A串变为B串所需要的最小代价。保证两串长度均小于等于300，且三种代价值均小于等于100。
测试样例：

"abc",3,"adc",3,5,3,100

返回：8

*/

class MinCost {
public:
    int findMinCost(string A, int n, string B, int m, int c0, int c1, int c2) {
        // write code here
        vector<vector<int>> vv(n+1,vector<int>(m+1,0));
        
        for (int i = 0; i <= n; i++) 
        {
            vv[i][0] = i * c1;
        }
        for (int j = 0; j <= m; j++) 
        {
            vv[0][j] = j * c0;
        }
        
        for(int i=1;i<n+1;++i)
        {
            for(int j=1;j<m+1;++j)
            {
                if(A[i-1]==B[j-1])
                {
                    vv[i][j]=vv[i-1][j-1];
                }
                else
                {
                    vv[i][j]=min(vv[i][j-1]+c0,min(vv[i-1][j]+c1,vv[i-1][j-1]+c2));
                }
            }
        }
        return vv[n][m];
    }
};