//  给定一个由n行数字组成的数字三角形如下图所示。试设计一个算法，计算出从三角形的顶至底的一条路径，使该路径经过的数字总和最大。
//  对于给定的由n行数字组成的数字三角形，计算从三角形的顶至底的路径经过的数字和的最大值。
#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n = 0;
	while (cin >> n)
	{
		vector<vector<int>> vv(n, vector<int>());
		for (int i = 0; i < n; ++i)
		{
			vector<int> v(i + 1, 0);
			for (auto& e : v)
				cin >> e;
			vv[i] = v;
		}

		/*for (int i = 0; i < vv.size(); ++i)
		{
			for (auto& e:vv[i])
			{
				cout << e << " ";
			}
			cout << endl;
		}*/

		// 自底向上
		for (int i = n - 1; i >= 0; --i)
		{
			for (int j = 0; j < vv[i].size(); ++j)
			{
				if (i == n - 1)
					vv[i][j] = vv[i][j];
				else
					vv[i][j] = max(vv[i + 1][j], vv[i + 1][j + 1]) + vv[i][j];
			}
		}

		cout << vv[0][0] << endl;

	}

	system("pause");
	return 0;
}
