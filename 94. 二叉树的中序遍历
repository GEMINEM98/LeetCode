/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
typedef struct TreeNode Node;
int Size(Node* root)
{
    if(root==NULL)
        return 0;
    return Size(root->left)+Size(root->right)+1;
}

void _inorder(Node* root,int* array,int* returnSize)
{
    if(root==NULL)
        return;
    
    _inorder(root->left,array,returnSize);
    array[*returnSize]=root->val;
    ++(*returnSize);
    _inorder(root->right,array,returnSize);
}


int* inorderTraversal(struct TreeNode* root, int* returnSize)
{
    *returnSize=Size(root);
    int* array=NULL;
    array=(int*)malloc(*returnSize*sizeof(int));
    
    int i=0;
    _inorder(root,array,&i);
    return array;
}
