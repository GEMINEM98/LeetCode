
/*

给定一个可能包含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。

说明：解集不能包含重复的子集。

示例:

输入: [1,2,2]
输出:
[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/subsets-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


class Solution {
public:

    // 去重 + 排序 的不可重复回溯：

    void _subsetsWithDup(vector<vector<int>>& vv,vector<int>& nums,vector<int>& v,int index)
    {
        for(int i=index;i<nums.size();++i)
        {
            v.push_back(nums[i]);   // 做选择
            if(find(vv.begin(),vv.end(),v)==vv.end())
                vv.push_back(v);
            _subsetsWithDup(vv,nums,v,i+1);  // 回溯
            v.pop_back();  // 撤销选择
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> vv;
        vector<int> v;
        vv.push_back(v);
        sort(nums.begin(),nums.end(),less());  // 必须要排序，因为题目中：1 2 2 和 2 1 2 和2 2 1 都是一样的。
        _subsetsWithDup(vv,nums,v,0);
        return vv;
    }
};