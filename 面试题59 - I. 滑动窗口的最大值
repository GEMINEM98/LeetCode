
/*

给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。

示例:

输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3
输出: [3,3,5,5,6,7] 
解释: 

  滑动窗口的位置                最大值
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

 

提示：

你可以假设 k 总是有效的，在输入数组不为空的情况下，1 ≤ k ≤ 输入数组的大小。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.size()==0)
            return {};

        int _max=nums[0];
        if(nums.size()<k)
        {
            for(int i=0;i<nums.size();++i)
            {
                if(nums[i]>_max)
                    _max=nums[i];
            }
            return {_max};
        }

        vector<int> res;
        int l=0;
        int r=l+k;
        for(;r<=nums.size();++l,++r)
        {
            _max=nums[l];
            for(int i=l;i<r;++i)
            {
                if(nums[i]>_max)
                    _max=nums[i];
            }
            res.push_back(_max);
        }
        return res;
    }
};