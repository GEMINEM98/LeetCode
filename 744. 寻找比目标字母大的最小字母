
/*
思路：二分查找
因为是寻找有序数组里面比目标字母大的最小字母，所以取区间中的最左边的数。
*/

class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) 
    {
        int sz=letters.size();
        int l=0;
        int r=sz-1;
        int mid=0;

        while(l<=r)  // l==r时，还需要进行判断
        {
            mid=l+((r-l)>>1);
            if(letters[mid]>target)
                r=mid-1;
            else
                l=mid+1;
        }
        return letters[l%sz];
    }
};



/*
思路：
直接比较，找到就返回，没找到返回第一个元素。
*/
class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) 
    {
        char res=letters[0];
        for(int i=0;i<letters.size();++i)
        {
            if(letters[i]>target)
            {
                res=letters[i];
                break;
            }    
        }
        return res;
    }
};
