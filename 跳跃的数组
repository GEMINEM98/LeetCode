
/*

链接：https://www.nowcoder.com/questionTerminal/b62396cc20824bdab05074ba3c94b143
来源：牛客网

【编程题】给出一个非负整数数组，你最初定位在数组的第一个位置，数组中的每个元素的值代表你在那个位置可以跳跃的最大长度。判断你是否能到达数组的最后一个位置。

例如：A = [2,3,1,1,4]，返回 true

A = [3,2,1,0,4]，返回 false

*/

#include <iostream>
#include <vector>
#include <algorithm>
#include <stdlib.h>
using namespace std;
void func(vector<int> v)
{
	int maxnum = 0;
	for (int i = 0; i < v.size(); ++i)
	{
		if (i > maxnum)
		{
			cout << "false" << endl;
			return;
		}
		maxnum = max(maxnum, i + v[i]);
	}
	cout << "true" << endl;
}

int main()
{
	vector<int> v;
	int n = 0;
	cin >> n;
	int number = 0;
	while (n--)
	{
		cin >> number;
		v.push_back(number);
	}
	func(v);
	system("pause");
	return 0;
}