
/*

对于一个数字序列，请设计一个复杂度为O(nlogn)的算法，返回该序列的最长上升子序列的长度，这里的子序列定义为这样一个序列U1，U2...，其中Ui < Ui+1，且A[Ui] < A[Ui+1]。

给定一个数字序列A及序列的长度n，请返回最长上升子序列的长度。
测试样例：

[2,1,4,3,1,5,6],7

返回：4

*/

class AscentSequence {
public:
    int findLongest(vector<int> A, int n) {
        // write code here
        vector<int> v(n,1);
        for(int i=1;i<n;++i)
        {
            int max_num=1;
            for(int j=0;j<i;++j)
            {
                if(A[j]<A[i])
                {
                    max_num=max(max_num,v[j]+1);
                }
            }
            v[i]=max_num;
        }
        int res=0;
        for(int i=0;i<n;++i)
        {
            res=max(res,v[i]);
        }
        return res;
    }
};