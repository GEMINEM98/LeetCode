
/*

三步问题。有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上1阶、2阶或3阶。实现一种方法，计算小孩有多少种上楼梯的方式。结果可能很大，你需要对结果模1000000007。

示例1:

 输入：n = 3 
 输出：4
 说明: 有四种走法

示例2:

 输入：n = 5
 输出：13

提示:

    n范围在[1, 1000000]之间

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/three-steps-problem-lcci
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

class Solution {
public:
    int waysToStep(int n) {
        
        if(n==1)
            return 1;
        if(n==2)
            return 2;
        if(n==3)
            return 4;
        
        int a=1;
        int b=2;
        int c=4;
        int d=0;
        for(int i=4;i<=n;++i)
        {
            //取模，对两个较大的数之和取模再对整体取模，防止越界:
            //假如对三个dp[i-n]都 % 1000000007，那么也是会出现越界情况（导致溢出变为负数的问题）
            //因为如果本来三个dp[i-n]都接近 1000000007 那么取模后仍然不变，但三个相加则溢出。
            //但对两个较大的dp[i-2]和dp[i-3]之和mod 1000000007，那么这两个较大的数相加大于1000000007，取模后又不溢出，
            //取模后变成一个小的数，与dp[i-1]相加再取模，就不会溢出了。

            d=((c+b)%1000000007+a)%1000000007;
            a=b;
            b=c;
            c=d;
        }
        return d;
    }
};