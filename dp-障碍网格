// 3、给定m行n列的网格，有一个机器人从左上角(0,0)出发，每一次可以向下或者向右走一步，网格中有些地方有障碍，机器人不能通过障碍。问：有多少种不同的方式走到右下角？
#include<bits/stdc++.h>
using namespace std;

int main()
{
	int m = 0;
	int n = 0;
	while (cin >> m >> n)
	{
		vector<vector<int>> dp(m, vector<int>(n, 0));
		vector<vector<int>> res(m, vector<int>(n, 0));

		int tmp = m;
		for (int i = 0; i < tmp; ++i)
		{
			vector<int> v(n, 0);
			for (auto& e : v)
				cin >> e;
			dp[i] = v;
		}
	
		for (int i = 0; i < m; ++i)
		{
			for (int j = 0; j < n; ++j)
			{
				if (dp[i][j] == 0)
				{
					if (i == 0 && j == 0)
						res[i][j] = 1;
					if (i > 0) // 下标不越界
						res[i][j] += res[i - 1][j];
					if (j > 0) // 下标不越界
						res[i][j] += res[i][j - 1];
				}

			}
		}
		cout << res[m - 1][n - 1] << endl;
	}
	system("pause");
	return 0;
}