
/*

输入一个字符串，打印出该字符串中字符的所有排列。

 

你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。

 

示例:

输入：s = "abc"
输出：["abc","acb","bac","bca","cab","cba"]

 

限制：

1 <= s 的长度 <= 8

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/zi-fu-chuan-de-pai-lie-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

class Solution {
public:

    // // 全排列

    // vector<string> permutation(string s) {
    //     vector<string> v;
    //     sort(s.begin(),s.end());
    //     v.push_back(s);
    //     while(next_permutation(s.begin(),s.end()))
    //     {
    //         v.push_back(s);
    //     }
    //     return v;
    // }



    //固定一个数的位置(index)，然后从下一位数再开始全排列(递归过程)...直到最后一位数
    //因为结果不重复，所以先sort，再if(i!=index&&nums[i]==nums[index])去掉重复的index

    void _permutation(vector<string>& v,string s,int index)
    {
        if(index==s.length())
        {
            v.push_back(s);
            return;
        }
        for(int i=index;i<s.length();++i)
        {
            if(i!=index&&s[i]==s[index])
            {
                continue;
            }
            else
            {
                swap(s[i],s[index]);
                _permutation(v,s,index+1);
            }
        }
    }

    vector<string> permutation(string s) {
        vector<string> v;
        sort(s.begin(),s.end());
        _permutation(v,s,0);
        return v;
    }

};